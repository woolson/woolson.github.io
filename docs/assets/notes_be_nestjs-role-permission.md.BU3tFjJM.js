import{_ as i,c as a,o as n,ae as h}from"./chunks/framework.Dgg8-8ov.js";const g=JSON.parse('{"title":"NestJS权限管理实现","description":"NestJS实现接口角色权限管理方案","frontmatter":{"description":"NestJS实现接口角色权限管理方案","published":true,"comment":true,"title":"NestJS权限管理实现"},"headers":[],"relativePath":"notes/be/nestjs-role-permission.md","filePath":"notes/be/nestjs-role-permission.md","lastUpdated":null}'),l={name:"notes/be/nestjs-role-permission.md"};function t(k,s,p,e,r,d){return n(),a("div",null,s[0]||(s[0]=[h(`<h2 id="权限方案" tabindex="-1">权限方案 <a class="header-anchor" href="#权限方案" aria-label="Permalink to &quot;权限方案&quot;">​</a></h2><h3 id="用户权限缓存" tabindex="-1">用户权限缓存 <a class="header-anchor" href="#用户权限缓存" aria-label="Permalink to &quot;用户权限缓存&quot;">​</a></h3><ul><li>用户权限列表：用户登录成功后返回前端时将权限缓存到<code>Redis</code>里面</li><li>访问接口时根据<code>Redis</code>权限列表进行鉴权</li></ul><h3 id="接口权限限制" tabindex="-1">接口权限限制 <a class="header-anchor" href="#接口权限限制" aria-label="Permalink to &quot;接口权限限制&quot;">​</a></h3><ul><li>用户登录成功后，将该用户角色权限缓存到<code>Redis</code>（不同用户共享角色权限列表）</li><li>在全局守卫<code>Gurad</code>里面获取当前用户角色和角色权限列表</li><li>使用<code>Nestjs</code>的<code>SetMetadata</code>设置访问接口所需权限（可多个）</li><li>有权限则返回接口数据，无权限则抛出<code>UnAuthorizeException</code>异常</li></ul><h2 id="权限表设计" tabindex="-1">权限表设计 <a class="header-anchor" href="#权限表设计" aria-label="Permalink to &quot;权限表设计&quot;">​</a></h2><ul><li>用户表 =&gt; 1:1 &lt;= 角色表</li><li>角色表 =&gt; n:n &lt;= 权限表</li></ul><p><img src="https://user-images.githubusercontent.com/27878293/110765057-bf37bc80-828e-11eb-8935-f679a033a3b9.png" alt="权限表设计"></p><h2 id="代码逻辑" tabindex="-1">代码逻辑 <a class="header-anchor" href="#代码逻辑" aria-label="Permalink to &quot;代码逻辑&quot;">​</a></h2><h3 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-label="Permalink to &quot;代码规范&quot;">​</a></h3><h4 id="接口权限设置" tabindex="-1">接口权限设置 <a class="header-anchor" href="#接口权限设置" aria-label="Permalink to &quot;接口权限设置&quot;">​</a></h4><ul><li>在 common/decorators/permission 中导入 Permission 装饰器</li><li>在接口上设置具体的权限（类型为数组，支持多个权限），权限必须在 PermissionCodeEnum 中注明</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// src/types/common.type</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">/** 通用元信息Key */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> enum</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> MetadataKeyEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** 鉴权 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  Authentication</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;authentication&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** 权限 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  Permissions</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;permissions&#39;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// src/common/decorators/permission.decorator.ts</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { SetMetadata } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;@nestjs/common&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { MetadataKeyEnum } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;src/types/common.type&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { PermissionCodeEnum } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;src/types/permission.type&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">/** 设置接口访问权限列表 */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> const</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Permission</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">permssions</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PermissionCodeEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">[]) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> SetMetadata</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(MetadataKeyEnum.Permissions, permssions);</span></span></code></pre></div><h4 id="权限清单" tabindex="-1">权限清单 <a class="header-anchor" href="#权限清单" aria-label="Permalink to &quot;权限清单&quot;">​</a></h4><p>在<code>src/types/permission.type.ts</code>中管理，书写注意规范：</p><ul><li>权限按功能树部分（翻到最下面）进行排序分区书写以便阅读</li><li>权限命名：简洁明了，见名知意，命名方式使用帕斯卡命名法，禁止随意书写</li><li>权限注释：按功能层级注明该权限控制内容，可参考文件内容示例部分，禁止随意书写</li><li>权限码：按次序编排，与数据库保持一致，切勿随意更改</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// src/types/permission.type.ts</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">/** 权限标识（提供给前端和接口判断权限） */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> enum</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PermissionCodeEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** WARN: 用户 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  User</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;01&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** 用户 - 用户列表 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  UserList</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;0101&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** 用户 - 用户详情 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  UserDetail</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;0102&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** 用户 - 用户审核 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  UserReviewer</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;0103&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="鉴权步骤" tabindex="-1">鉴权步骤 <a class="header-anchor" href="#鉴权步骤" aria-label="Permalink to &quot;鉴权步骤&quot;">​</a></h2><h3 id="接口添加访问权限" tabindex="-1">接口添加访问权限 <a class="header-anchor" href="#接口添加访问权限" aria-label="Permalink to &quot;接口添加访问权限&quot;">​</a></h3><ul><li>明确需求 types/permission.type.ts 中的权限列表可以访问当前的接口</li><li>使用 Permission 装饰器将权限列表以数组的形式给接口添加权限</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { Permission } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;src/common/decorators/permission.decorator&#39;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { PermissionCodeEnum } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;src/types/permission.type.ts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Get</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;users&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">)</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Permission</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">([</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">	PermissionCodeEnum.UserList,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">])</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">ApiOperation</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ summary: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;获取用户列表&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> })</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">async </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getUserList</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {}</span></span></code></pre></div><h3 id="登录获取用户权限" tabindex="-1">登录获取用户权限 <a class="header-anchor" href="#登录获取用户权限" aria-label="Permalink to &quot;登录获取用户权限&quot;">​</a></h3><ol><li>根据 admin.role_id 查询 admin_role_permission_relationship（关联 admin_permission）获取用户所有权限的 code</li><li>以 <code>role:\${roleId}</code>的形式将角色的code存入Redis中（无限期有效）</li><li>将code字符串化后传给前端，前端根据code判断展示界面元素</li></ol><h3 id="接口鉴权-authguard" tabindex="-1">接口鉴权（AuthGuard） <a class="header-anchor" href="#接口鉴权-authguard" aria-label="Permalink to &quot;接口鉴权（AuthGuard）&quot;">​</a></h3><ol><li>判断<code>Token</code>是否有效，无效则返回<code>401</code></li><li>获取当前接口所需要的权限（<code>@Permission</code>中指定的）</li><li><code>AuthGuard</code>里根据<code>Token</code>去<code>Redis</code>获取用户信息（为了获取用户<code>roleId</code>）</li><li>根据<code>roleId</code>查询当前角色所有权限的<code>code</code></li><li>判断当前用户拥有的权限和接口的权限是否存在交集，如果有正常返回数据，没有返回<code>403</code></li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// src/common/guards/auth.guard.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Injectable</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> AuthGuard</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> implements</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> CanActivate</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  constructor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> readonly</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;"> redisPlusService</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RedisPlusService</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> readonly</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;"> reflector</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Reflector</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  async</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> canActivate</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    context</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ExecutionContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  )</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Promise</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">boolean</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    /** 请求头部信息 */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">headers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> context.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">switchToHttp</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">().</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">     * 需要鉴权</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">     * </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">@description</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> 用作判读是否需要登录</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">     * </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">@example</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> @Metadata</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> needAuth</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.reflector.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">get</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">boolean</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt;(</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      MetadataKeyEnum.Authentication,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      context.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getHandler</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(),</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    );</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (needAuth </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">!==</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> false</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">!</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">headers[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">TOKEN_KEY</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">]) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> AuthException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;未登录&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, APICode.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">FAILED</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      /** Redis用户信息 */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> userInfo</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.redisPlusService</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getUserInfo</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(headers[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">TOKEN_KEY</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">]);</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">!</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">userInfo) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> AuthException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;未登录&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, APICode.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">FAILED</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      /**</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">       * 接口所需权限</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">       * </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">@description</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> 调用此接口所需要的权限</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">       */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> permissions</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.reflector.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">get</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">[]&gt;(</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        MetadataKeyEnum.Permissions,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        context.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getHandler</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(),</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      );</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (permissions </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;&amp;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> permissions.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">length</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> &gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">        /** 当前用户角色的权限列表 */</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> rolePermission</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.redisPlusService</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getRolePermission</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(userInfo.roleId);</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (permissions.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">some</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">o</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> rolePermission.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">includes</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(o))) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PermissionException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;无权访问&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, APICode.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">FAILED</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PermissionException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;无权访问&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, APICode.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">FAILED</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>总得来说，权限方面的管理蛮简单的，没有角色继承，权限分组等复杂的应用权限管理。本文重点是在接口层面的权限限制。</p>`,28)]))}const y=i(l,[["render",t]]);export{g as __pageData,y as default};
