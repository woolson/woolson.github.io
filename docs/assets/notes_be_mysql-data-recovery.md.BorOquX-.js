import{_ as i,c as a,o as n,ae as l}from"./chunks/framework.Dgg8-8ov.js";const F=JSON.parse('{"title":"一次MySQL数据恢复经验","description":"使用binlog被注释掉的SQL恢复数据","frontmatter":{"description":"使用binlog被注释掉的SQL恢复数据","published":true,"title":"一次MySQL数据恢复经验"},"headers":[],"relativePath":"notes/be/mysql-data-recovery.md","filePath":"notes/be/mysql-data-recovery.md","lastUpdated":null}'),p={name:"notes/be/mysql-data-recovery.md"};function h(k,s,t,e,d,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>手动修改数据时，不小心把部分数据物理删除了。虽然不是很重要，但是本着探索精神。被删除的数据，是否能恢复原状呢？</p><h2 id="分析实现流程" tabindex="-1">分析实现流程 <a class="header-anchor" href="#分析实现流程" aria-label="Permalink to &quot;分析实现流程&quot;">​</a></h2><ul><li>找到<code>binlog</code>文件</li><li>找到操作数据的<code>SQL</code></li><li>把<code>SQL</code>在数据库中执行</li></ul><h2 id="开始" tabindex="-1">开始 <a class="header-anchor" href="#开始" aria-label="Permalink to &quot;开始&quot;">​</a></h2><h3 id="找到binlog文件" tabindex="-1">找到binlog文件 <a class="header-anchor" href="#找到binlog文件" aria-label="Permalink to &quot;找到binlog文件&quot;">​</a></h3><p>数据能够恢复的前提是<strong>binlog</strong></p><blockquote><p>数据的恢复必须依赖<code>MySQL</code>的<code>binlog</code>功能（关于<code>binlog</code>信息，这里不做赘述）。</p></blockquote><h4 id="查看binlog是否开启" tabindex="-1">查看binlog是否开启 <a class="header-anchor" href="#查看binlog是否开启" aria-label="Permalink to &quot;查看binlog是否开启&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">mysql</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> show variables </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">like</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;log_bin&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">---------------+-------+</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| Variable_name | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> |</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">---------------+-------+</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| log_bin       | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">ON</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    |</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">---------------+-------+</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">1</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> row</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> in</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">01</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> sec)</span></span></code></pre></div><p><strong>注意：这个默认是开启的，如果是<code>OFF</code>那就到此结束。</strong></p><h4 id="找到binlog文件-1" tabindex="-1">找到binlog文件 <a class="header-anchor" href="#找到binlog文件-1" aria-label="Permalink to &quot;找到binlog文件&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">mysql</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> show variables </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">like</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;%dir%&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">-----------------------------------------+--------------------------------+</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| Variable_name                           | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">                          |</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">-----------------------------------------+--------------------------------+</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| basedir                                 | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">usr</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">                          |</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| binlog_direct_non_transactional_updates | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">OFF</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">                            |</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| character_sets_dir                      | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">usr</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">share</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">mysql</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">-</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">8</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">charsets</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> |</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">| datadir                                 | </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">var</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">lib</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">mysql</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">/</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">                |</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">……</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">-----------------------------------------+--------------------------------+</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">17</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> rows</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> in</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">01</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> sec)</span></span></code></pre></div><p>其中的<code>datadir</code>即<code>binlog</code>文件所在目录。进去看下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">➜</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  mysql</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> ls</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">auto.cnf</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">       binlog.000009</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">    ib_buffer_pool</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  mysql.ibd</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">           server-cert.pem</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000003</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  binlog.000010</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">    ibdata1</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">         mysql.sock</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">          server-key.pem</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000004</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  binlog.index</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">     ib_logfile0</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">     mysql.sock.lock</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">     sys</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000005</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  ca-key.pem</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">       ib_logfile1</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">     npmer</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">               task_machine</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000006</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  ca.pem</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">           ibtmp1</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">          performance_schema</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  task_machine_test</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000007</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  client-cert.pem</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  #innodb_temp    private_key.pem     undo_001</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">binlog.000008</span></span></code></pre></div><p>其中名字以<code>binlog.00000*</code>即binlog文件。这里有好几个文件，那到底哪些是我所需要的呢？<strong>在我们开始之前，我们使用<code>flush log</code> 命令，使当前主库新建正在使用的 binlog 文件。好处如下：</strong></p><ol><li>可将误删操作，定位在一个 BINLOG 文件中，便于之后的数据分析和恢复</li><li>避免操作正在被使用的 BINLOG 文件，防止发生意外情况</li></ol><h3 id="确定binlog区间" tabindex="-1">确定binlog区间 <a class="header-anchor" href="#确定binlog区间" aria-label="Permalink to &quot;确定binlog区间&quot;">​</a></h3><blockquote><p>MySQL 的二进制日志 binlog 可以说是 MySQL 最重要的日志。<strong>它记录了所有的 DDL 和 DML 语句</strong><em>（除了数据查询语句select、show等），以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的。</em><strong>binlog 的主要目的是复制和恢复。</strong></p></blockquote><p>所以我们需要<strong>找到操作了数据的这些SQL</strong>，例如我的需求：我是因为物理删除了部分数据，那么我要找到这部分数据插入的SQL，直到删除这部分数据的SQL。</p><p>看似比较麻烦，MySQL内置的工具<code>mysqlbinlog</code>工具还是比较方便的。简单看下<code>mysqlbinlog</code>的常用参数：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  --database</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      # 仅仅列出配置的数据库信息</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  --no-defaults</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">   # 读取没有选项的文件, 指定的原因是由于 mysqlbinlog 无法识别 BINLOG 中的 default-character-set=utf8 指令</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  --offset</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">        # 跳过 log 中 N 个条目</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  --verbose</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">       # 将日志信息重建为原始的 SQL 陈述</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    -v</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">            # 仅仅解释行信息</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    -vv</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">           # 不但解释行信息，还将 SQL 列类型的注释信息也解析出来</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  --start-datetime</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">            # 显示从指定的时间或之后的时间的事件接受 DATETIME 或者 TIMESTRAMP 格式</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  --base64-output</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">decode-rows</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> # 将 BINLOG 语句中事件以 base-64 的编码显示，对一些二进制的内容进行屏蔽</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    AUTO</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">          # 默认参数，自动显示 BINLOG 中的必要的语句</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    NEVER</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">         # 不会显示任何的 BINLOG 语句，如果遇到必须显示的 BINLOG 语言，则会报错退出</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    DECODE-ROWS</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">   # 显示通过 -v 显示出来的 SQL 信息，过滤到一些 BINLOG 二进制数据</span></span></code></pre></div><p>所以我的查找数据使用以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">➜</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  mysqlbinlog</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> --no-defaults</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> --start-datetime=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2021-06-02 09:30:00&#39;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> --stop-datetime=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2021-06-02 14:30:00&#39;</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> binlog.000008</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> binlog.000009</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  |</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> less</span></span></code></pre></div><p>可见一下内容（示例）：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span># at 734176</span></span>
<span class="line"><span>#210602 10:03:11 server id 1  end_log_pos 734670 CRC32 0xe0912832   Update_rows: table id 86 flags: STMT_END_F</span></span>
<span class="line"><span>### UPDATE \`db_name\`.\`table_name\`</span></span>
<span class="line"><span>### WHERE</span></span>
<span class="line"><span>###   @1=1731</span></span>
<span class="line"><span>###   @2=4</span></span>
<span class="line"><span>###   @3=&#39;名称&#39;</span></span>
<span class="line"><span>###   @4=NULL</span></span>
<span class="line"><span>###   @5=NULL</span></span>
<span class="line"><span>###   @6=&#39;18120004&#39;</span></span>
<span class="line"><span>###   @7=1623045600</span></span>
<span class="line"><span>###   @8=1623132000</span></span>
<span class="line"><span>###   @9=8</span></span>
<span class="line"><span>###   @10=139062</span></span>
<span class="line"><span>###   @11=NULL</span></span>
<span class="line"><span>###   @12=2427</span></span>
<span class="line"><span>###   @13=71</span></span>
<span class="line"><span>###   @14=87</span></span>
<span class="line"><span>###   @15=0</span></span>
<span class="line"><span>###   @16=1622599374</span></span>
<span class="line"><span>###   @17=&#39;18120004&#39;</span></span>
<span class="line"><span>###   @18=0</span></span>
<span class="line"><span>###   @19=&#39;&#39;</span></span>
<span class="line"><span>### SET</span></span>
<span class="line"><span>###   @1=1731</span></span>
<span class="line"><span>###   @2=4</span></span>
<span class="line"><span>###   @3=&#39;名称&#39;</span></span>
<span class="line"><span>###   @4=NULL</span></span>
<span class="line"><span>###   @5=NULL</span></span>
<span class="line"><span>###   @6=&#39;18120004&#39;</span></span>
<span class="line"><span>###   @7=1623043800</span></span>
<span class="line"><span>###   @8=1623130200</span></span>
<span class="line"><span>###   @9=8</span></span>
<span class="line"><span>###   @10=139062</span></span>
<span class="line"><span>###   @11=NULL</span></span>
<span class="line"><span>###   @12=2427</span></span>
<span class="line"><span>###   @13=70</span></span>
<span class="line"><span>###   @14=86</span></span>
<span class="line"><span>###   @15=0</span></span>
<span class="line"><span>###   @16=1622599391</span></span>
<span class="line"><span>###   @17=&#39;18120004&#39;</span></span>
<span class="line"><span>###   @18=0</span></span>
<span class="line"><span>###   @19=&#39;&#39;</span></span>
<span class="line"><span># at 734670</span></span>
<span class="line"><span>#210602 10:03:11 server id 1  end_log_pos 734701 CRC32 0xf883537a   Xid = 12845</span></span>
<span class="line"><span>COMMIT/*!*/;</span></span>
<span class="line"><span># at 734701</span></span></code></pre></div><p>其中可以看到一些操作数据的SQL。但是，这些SQL都被注释了，而且里面的字段名都被<code>@+数字</code>替代了。</p><p><strong>卧槽🤦🏻‍♂️，这么神马情况</strong>，我看的网上教程他们输出的直接就是可执行的SQL啊。找了一下原因，是数据库这两个设置<code>binlog_format</code>和<code>binlog_rows_query_log_events</code><a href="https://www.percona.com/blog/2020/07/09/binlog2sql-binlog-to-raw-sql-conversion-and-point-in-time-recovery/" target="_blank" rel="noreferrer">👉🏻 详细移步这里</a>。</p><h3 id="生成可执行sql" tabindex="-1">生成可执行SQL <a class="header-anchor" href="#生成可执行sql" aria-label="Permalink to &quot;生成可执行SQL&quot;">​</a></h3><p>上面链接中提到的开源的仓库可以从以上<code>binlog</code>文件生成可执行<code>SQL</code>。<a href="https://github.com/danfengcao/binlog2sql" target="_blank" rel="noreferrer">🔗 仓库地址：https://github.com/danfengcao/binlog2sql</a>。我们看下他的要求：</p><ul><li>Python 2.7, 3.4+</li><li>MySQL 5.6, 5.7</li></ul><p>然后按照仓库说明进行执行即可，执行过程中遇到些许问题。**依赖的<code>PyMySQL@0.7.11</code>版本在执行的过程中报错了。检查后将版本升级到<code>PyMySQL@0.9.3</code>发现可以正确执行了。**然后就生成了目标SQL：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">➜  python </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">binlog2sql</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">py</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> -</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">h127</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">1</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> -</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">P3306 </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">uadmin </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">p</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;admin&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> -</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">dtest </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">t test </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">--start-file=&#39;binlog.000008&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">INSERT INTO</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`test\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`test3\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`addtime\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`data\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`id\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">VALUES</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2016-12-10 13:03:38&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;english&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">4</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">); #</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">start</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 570</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> end</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 736</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">UPDATE</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`test\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`test3\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> SET</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`addtime\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2016-12-10 12:00:00&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`data\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;中文&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`id\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">3</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> WHERE</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`addtime\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2016-12-10 13:03:22&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> AND</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`data\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;中文&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> AND</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`id\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">3</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> LIMIT</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 1</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">; #</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">start</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 763</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> end</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 954</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">DELETE</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> FROM</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`test\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`test3\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> WHERE</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`addtime\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;2016-12-10 13:03:38&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> AND</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`data\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;english&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> AND</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`id\`</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">4</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> LIMIT</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 1</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">; #</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">start</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 981</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> end</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 1147</span></span></code></pre></div><p>以上命令将<code>SQL</code>输出到了控制台，可在命令后面加上输出到文件中，方便后面执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">➜</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">  python</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> binlog2sql.py</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -h127.0.0.1</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -P3306</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -uadmin</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -p</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;admin&#39;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -dtest</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> -t</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> test</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> --start-file=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;binlog.000008&#39;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> &gt;</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> result.sql</span></span></code></pre></div><p>然后将以上生成的<code>SQL</code>，进行执行即可。在执行前注意确认数据是否正确或在测试库进行执行，防止对数据二次破坏。</p><h2 id="综上" tabindex="-1">综上 <a class="header-anchor" href="#综上" aria-label="Permalink to &quot;综上&quot;">​</a></h2><p>总体思路是比较简单的，主要是三个问题：</p><ol><li>数据库是否开启<code>binlog</code>，这是基础；</li><li>找到对应区间<code>binlog</code>；</li><li>解析生成目标<code>SQL</code>；</li></ol><p>以上。</p>`,40)]))}const E=i(p,[["render",h]]);export{F as __pageData,E as default};
