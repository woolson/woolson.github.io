import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.Dgg8-8ov.js";const g=JSON.parse('{"title":"MarkdownJS模块使用","description":"NodeJS使用markdown-js模块解析md文件。","frontmatter":{"description":"NodeJS使用markdown-js模块解析md文件。"},"headers":[],"relativePath":"notes/be/markdown-in-nodejs.md","filePath":"notes/be/markdown-in-nodejs.md","lastUpdated":1751126425000}'),h={name:"notes/be/markdown-in-nodejs.md"};function l(e,s,p,k,r,E){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="markdownjs模块使用" tabindex="-1">MarkdownJS模块使用 <a class="header-anchor" href="#markdownjs模块使用" aria-label="Permalink to &quot;MarkdownJS模块使用&quot;">​</a></h1><blockquote><ul><li>📅 <strong>日期</strong>：2016年10月22日 星期六</li><li>🌤 <strong>天气</strong>：天晴</li></ul></blockquote><h2 id="首先是安装markdown-js模块" tabindex="-1">首先是安装markdown-js模块 <a class="header-anchor" href="#首先是安装markdown-js模块" aria-label="Permalink to &quot;首先是安装markdown-js模块&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">npm</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> install</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> markdown-js</span></span></code></pre></div><h2 id="在路由文件中定义所要访问的文章路径" tabindex="-1">在路由文件中定义所要访问的文章路径 <a class="header-anchor" href="#在路由文件中定义所要访问的文章路径" aria-label="Permalink to &quot;在路由文件中定义所要访问的文章路径&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">var</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> markdown </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> require</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;markdown-js&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">app.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">param</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;article_name&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, (</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">req</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">res</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">next</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">name</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  let</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> filePath, content, html</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  filePath </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> \`/static/articles/\${</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">name</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">}.md\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  // 判断文件是否存在（不存在的文件会报错，也可以用fs模块进行判断）</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  try</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    content </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> fs.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">readFileSync</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(filePath, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;utf8&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">)</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">catch</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (e) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    content </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;Author had removed this article, Sorry!&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  // 利用markdown-js模块将MD解析成HTML</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  html </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> markdown.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">makeHtml</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(content)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  // 这里的formatHTML是用来加入header和一些自定义的脚本和CSS样式, 然后返回</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  // 在header里面会加入Highlight.js将代码高亮</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  res.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">send</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">formatHTML</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(name, html))</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  next</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">app.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">get</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;/articles/:article_name&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, (</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">req</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">res</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  res.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">end</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">})</span></span></code></pre></div><p>现在如果运行正常，即可看出来是这样的</p><p><img src="http://ww3.sinaimg.cn/large/708e7d29gw1fa8a28jp2sj21kw0msjuc.jpg" alt=""></p><h2 id="使用highlight-js格式化代码" tabindex="-1">使用Highlight.js格式化代码 <a class="header-anchor" href="#使用highlight-js格式化代码" aria-label="Permalink to &quot;使用Highlight.js格式化代码&quot;">​</a></h2><ul><li>这个是Highlight官网 <a href="https://highlightjs.org/" target="_blank" rel="noreferrer">https://highlightjs.org/</a></li><li>该网站可能需要翻墙才能访问</li><li>我放了个在自己的服务器上 <a href="http://www.woolson.cn/public/highlight.zip" target="_blank" rel="noreferrer">Highlight.zip</a></li></ul><p>使用方法</p><blockquote><p>在导出的HTML的head中引入下载的包中的CSS和JS，压缩包中都有的 引入JS是分析代码高亮的，CSS则是用来代码高亮的，里面有很多种主题可以选择使用</p></blockquote><div class="language-markup vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markup</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span>&lt;link rel=&quot;stylesheet&quot; href=&quot;./monokai.css&quot;&gt;</span></span>
<span class="line"><span>&lt;script src=&quot;./highlight.pack.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span>&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;</span></span></code></pre></div><p>这里我贴一个Monokai主题</p><p><img src="http://ww3.sinaimg.cn/large/708e7d29gw1fa8a2rgs7hj21kw0nwwhz.jpg" alt=""></p><blockquote><p>现在代码是好看了，细心的盆友会发现区块和其他部分还是无样式，挺难看的 所以我又引入了<a href="https://maxiang.io/vip.html" target="_blank" rel="noreferrer">马克飞象</a>的样式文件，也可以自己写。 CSS链接在此 <a href="https://dn-maxiang.qbox.me/res-min/themes/marxico.css" target="_blank" rel="noreferrer">https://dn-maxiang.qbox.me/res-min/themes/marxico.css</a></p></blockquote><p>所有现在好看多了(还有很多东西，自己去发现吧)……</p><p><img src="http://ww3.sinaimg.cn/large/708e7d29gw1fa8a7agc5pj21kw0uu0xl.jpg" alt=""></p><blockquote><p>对了推荐一个<a href="http://cjting.me/" target="_blank" rel="noreferrer">丁老师</a>写的图床chrome插件(用过的都说好O(∩_∩)O哈哈~)<a href="https://chrome.google.com/webstore/detail/%E5%9B%BE%E5%BA%8Aon%E5%BE%AE%E5%8D%9A/opblldeehobgiedgjgamaklagilmkagc" target="_blank" rel="noreferrer">图床on微博</a></p></blockquote>`,19)]))}const o=i(h,[["render",l]]);export{g as __pageData,o as default};
