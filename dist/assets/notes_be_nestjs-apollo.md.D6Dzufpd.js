import{_ as i,c as a,o as n,ae as l}from"./chunks/framework.Dgg8-8ov.js";const o=JSON.parse('{"title":"NodeJS使用Apollo","description":"封装Apollo接口为Node Package以方便使用","frontmatter":{"title":"NodeJS使用Apollo","description":"封装Apollo接口为Node Package以方便使用","published":true},"headers":[],"relativePath":"notes/be/nestjs-apollo.md","filePath":"notes/be/nestjs-apollo.md","lastUpdated":1751126425000}'),h={name:"notes/be/nestjs-apollo.md"};function p(k,s,t,e,E,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><code>Java</code>官方提供了客户端代码，但是对于<code>NodeJS</code>没有提供（有第三方开源包，有的已经不再更新，有的不好使用）。所以使用官方提供的接口进行封装<code>NodeJS</code>+<code>TS</code>的包，方便使用。</p><h2 id="实现方案" tabindex="-1">实现方案 <a class="header-anchor" href="#实现方案" aria-label="Permalink to &quot;实现方案&quot;">​</a></h2><ul><li>获取配置：通过接口将远程的配置下载下来</li><li>解析配置：将获取到的配置解析为对象</li><li>保存与分发：将获取到的配置，分类存储并配置类型，方便阅读和使用</li></ul><p>实现注意点:</p><ul><li>配置需要在所有引用之前加载完毕</li><li>依赖注入和类型推导</li><li>远程配置和项目类型准确对应</li></ul><h2 id="实现步骤" tabindex="-1">实现步骤 <a class="header-anchor" href="#实现步骤" aria-label="Permalink to &quot;实现步骤&quot;">​</a></h2><h3 id="步骤一-获取配置" tabindex="-1">步骤一：获取配置 <a class="header-anchor" href="#步骤一-获取配置" aria-label="Permalink to &quot;步骤一：获取配置&quot;">​</a></h3><p>官方提供了两个接口（Apollo其他语言接入指南）：</p><ol><li>带缓存读取：读取结果为<code>Json</code>格式数据</li><li>不带缓存读取：读取结果为<code>Apollo</code>平台配置的<code>dotenv</code>格式配置</li></ol><p><strong>注意事项</strong>：</p><ul><li>根据需要选择是否使用缓存</li><li><code>Apollo 1.6.0</code>以后接口可以加<code>Token</code>进行鉴权，推荐使用（如果获取配置接口外网可访问则必须使用，防止重要配置泄露的安全问题）</li><li>使用<code>Token</code>的鉴权，注意鉴权参数的算法</li><li>两个接口返回数据类型不同，需要额外处理（使用<code>dotenv</code>解析不带缓存读取的配置）</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.host=redis.com</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.port=0001</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.db=1</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">db.host=dbhost.com</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">db.port=0001</span></span></code></pre></div><h3 id="步骤二-解析配置" tabindex="-1">步骤二：解析配置 <a class="header-anchor" href="#步骤二-解析配置" aria-label="Permalink to &quot;步骤二：解析配置&quot;">​</a></h3><p>将第一步获取到的配置统一解析为<code>Json</code>格式并结构化</p><h4 id="将yaml数据转成json" tabindex="-1">将YAML数据转成Json <a class="header-anchor" href="#将yaml数据转成json" aria-label="Permalink to &quot;将YAML数据转成Json&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  &quot;redis.host&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;redis.com&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  &quot;redis.port&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;0001&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  &quot;redis.db&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;1&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  &quot;db.host&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;dbhost.com&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">  &quot;db.port&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;0001&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h4 id="将json数据结构化" tabindex="-1">将Json数据结构化 <a class="header-anchor" href="#将json数据结构化" aria-label="Permalink to &quot;将Json数据结构化&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">{</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  redis</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    host</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;redis.com&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    port</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;0001&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    db</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  db</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    host</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;dbhost.com&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    port</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;0001&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="配置管理" tabindex="-1">配置管理 <a class="header-anchor" href="#配置管理" aria-label="Permalink to &quot;配置管理&quot;">​</a></h3><p>目前配置项入住Apollo，在项目中有各种配置，大致分为三种和修改形式：</p><ol><li><code>src/common/constants/common.ts</code>中的静态变量配置：注意统一命名规范</li><li><code>src/config/env</code>中的按环境获取的配置：需要已废弃</li><li>部分写在代码中的配置：需要废弃并迁入<code>src/common/constants/common.ts</code></li></ol><p>后续这些配置需要进行整理，对配置进行整理，整理的原则为：</p><ol><li>各个环境不变的配置：全部移动到<code>src/common/constants/common.ts</code>中去，注意命名规范；</li><li>跟环境紧密相关的配置，需要添加到远程，按以下步骤：</li><li>在<code>Apollo</code>中添加配置并填写完整的备注信息，字段命名规范见下文； <ol><li>在项目代码中<code>Config</code>类型中添加该字段并添加与上一步完全相同的备注信息;</li></ol></li></ol><h4 id="配置样例" tabindex="-1">配置样例 <a class="header-anchor" href="#配置样例" aria-label="Permalink to &quot;配置样例&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.host=redis.com</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.port=0001</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">redis.db=1</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">db.host=dbhost.com</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">db.port=0001</span></span></code></pre></div><h4 id="配置规范" tabindex="-1">配置规范 <a class="header-anchor" href="#配置规范" aria-label="Permalink to &quot;配置规范&quot;">​</a></h4><ol><li>只允许定义一层到两层，<code>e.g. keyName = value</code> 或者 <code>scopeName.keyName = value</code>，<strong>名称使用驼峰命名法</strong></li><li>在项目代码中增加： <ol><li><code>ConfigKeyEnum</code>中增加一层配置的<code>keyName</code>或两层配置的<code>scopeName</code>（<strong>注意必须和<code>Apollo</code>命名保持一致</strong>）并在<code>Config</code>中添加该项</li><li>如果是两层的配置，必须在<code>Config</code>接口下添加子层级配置的类型约束，每个属性添加注释和类型（<strong>注意必须和<code>Apollo</code>命名保持一致</strong>）</li></ol></li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ConfigKeyEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /* Redis配置 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  Redis</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;redis&#39;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /* 数据库配置 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  DB</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;db&#39;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  [ConfigKeyEnum.Redis]</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RedisConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  [ConfigKeyEnum.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">DB</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">]</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> DBConfig</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RedisConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /* Redis主机地址 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  host</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  port</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  db</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> DBConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  host</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  port</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h3 id="配置使用" tabindex="-1">配置使用 <a class="header-anchor" href="#配置使用" aria-label="Permalink to &quot;配置使用&quot;">​</a></h3><h4 id="nodejs" tabindex="-1">NodeJS <a class="header-anchor" href="#nodejs" aria-label="Permalink to &quot;NodeJS&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { getApolloConfig } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;@shinho-sh/node-apollo&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> function</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> apolloConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> getApolloConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    apolloConfig: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      url: process.env.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_META</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      token: process.env.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_ACCESSKEY_SECRET</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      appId: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_APP_ID</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      cluster: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;default&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      namespace: [</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;application&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      env: EnvEnum.Dev,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      useCache: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">true</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  });</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> app</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> NestFactory.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(AppModule);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">})();</span></span></code></pre></div><h4 id="nestjs" tabindex="-1">NestJS <a class="header-anchor" href="#nestjs" aria-label="Permalink to &quot;NestJS&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// config.helper.ts</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 将ConfigModule及配置注入到全局</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> function</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> registerConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">configEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RegisterOptions</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> baseConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> ConfigModule.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">forRoot</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config);</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> configProviders</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> Object.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">keys</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(configEnum).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">map</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">item</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      provide: configEnum[item],</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      useFactory</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">configService</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ConfigService</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> configService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">get</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(configEnum[item]);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      inject: [ConfigService],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    };</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  });</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  baseConfig.providers.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">push</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">...</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">configProviders);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  baseConfig.exports.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">push</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">...</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">configProviders.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">map</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">o</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> o.provide));</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> baseConfig;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> function</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> setupConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> () {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  // ...做一下其他的预处理或处理环境变量</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> setApolloIntoEnv</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    apolloConfig: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      url: process.env.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_META</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      token: process.env.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_ACCESSKEY_SECRET</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      appId: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">APOLLO_APP_ID</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      cluster: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;default&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      namespace: [</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;application&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    coverValue: coverValue,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  });</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> config</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// app.module.ts</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Global</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Module</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  imports: [</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    registerConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      config: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        isGlobal: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        load: [setupConfig],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      configEnum: ConfigKeyEnum,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    })</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">})</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> AppModule</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {}</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// some.service.ts</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">@</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Injectable</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> SomeServie</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  constructor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    /* 注入配置 */</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    @</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Inject</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(ConfigKeyEnum.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">DB</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">)</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> readonly</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;"> dbConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">[</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">ConfigKeyEnum</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">DB</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">]</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ) {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    /* 使用 */</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">    this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.dbConfig.host</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h3 id="覆盖配置" tabindex="-1">覆盖配置 <a class="header-anchor" href="#覆盖配置" aria-label="Permalink to &quot;覆盖配置&quot;">​</a></h3><p>覆盖配置需要配置和远程，相同的配置结构，主要配合调试不同环境使用</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 远程配置</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">redis.host </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> redis.com</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">redis.port </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 0001</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">redis.index </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 1</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 项目代码</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { getApolloConfig } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;@shinho-sh/node-apollo&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> </span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> function</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> apolloConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> getApolloConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    apolloConfig: {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        ...</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// config</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    // 覆盖配置</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    coverValue: {</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">      &quot;redis.host&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;&lt;Custom Value&gt;&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">      &quot;redis.port&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;&lt;Custom Value&gt;&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> app</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> NestFactory.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(AppModule);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">})();</span></span></code></pre></div><h2 id="综合" tabindex="-1">综合 <a class="header-anchor" href="#综合" aria-label="Permalink to &quot;综合&quot;">​</a></h2><p>以上为目前方案，如有问题可按需求进行调整。</p>`,40)]))}const g=i(h,[["render",p]]);export{o as __pageData,g as default};
